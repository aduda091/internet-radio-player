{"version":3,"sources":["node_modules/react-player/lib/players/Wistia.js"],"names":[],"mappings":"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","file":"Wistia.f6a46920.js","sourceRoot":"..","sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar Wistia_exports = {};\n__export(Wistia_exports, {\n  default: () => Wistia\n});\nmodule.exports = __toCommonJS(Wistia_exports);\nvar import_react = __toESM(require(\"react\"));\nvar import_utils = require(\"../utils\");\nvar import_patterns = require(\"../patterns\");\nconst SDK_URL = \"https://fast.wistia.com/assets/external/E-v1.js\";\nconst SDK_GLOBAL = \"Wistia\";\nconst PLAYER_ID_PREFIX = \"wistia-player-\";\nclass Wistia extends import_react.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\n    __publicField(this, \"playerID\", this.props.config.playerId || `${PLAYER_ID_PREFIX}${(0, import_utils.randomString)()}`);\n    // Proxy methods to prevent listener leaks\n    __publicField(this, \"onPlay\", (...args) => this.props.onPlay(...args));\n    __publicField(this, \"onPause\", (...args) => this.props.onPause(...args));\n    __publicField(this, \"onSeek\", (...args) => this.props.onSeek(...args));\n    __publicField(this, \"onEnded\", (...args) => this.props.onEnded(...args));\n    __publicField(this, \"onPlaybackRateChange\", (...args) => this.props.onPlaybackRateChange(...args));\n    __publicField(this, \"mute\", () => {\n      this.callPlayer(\"mute\");\n    });\n    __publicField(this, \"unmute\", () => {\n      this.callPlayer(\"unmute\");\n    });\n  }\n  componentDidMount() {\n    this.props.onMount && this.props.onMount(this);\n  }\n  load(url) {\n    const { playing, muted, controls, onReady, config, onError } = this.props;\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then((Wistia2) => {\n      if (config.customControls) {\n        config.customControls.forEach((control) => Wistia2.defineControl(control));\n      }\n      window._wq = window._wq || [];\n      window._wq.push({\n        id: this.playerID,\n        options: {\n          autoPlay: playing,\n          silentAutoPlay: \"allow\",\n          muted,\n          controlsVisibleOnLoad: controls,\n          fullscreenButton: controls,\n          playbar: controls,\n          playbackRateControl: controls,\n          qualityControl: controls,\n          volumeControl: controls,\n          settingsControl: controls,\n          smallPlayButton: controls,\n          ...config.options\n        },\n        onReady: (player) => {\n          this.player = player;\n          this.unbind();\n          this.player.bind(\"play\", this.onPlay);\n          this.player.bind(\"pause\", this.onPause);\n          this.player.bind(\"seek\", this.onSeek);\n          this.player.bind(\"end\", this.onEnded);\n          this.player.bind(\"playbackratechange\", this.onPlaybackRateChange);\n          onReady();\n        }\n      });\n    }, onError);\n  }\n  unbind() {\n    this.player.unbind(\"play\", this.onPlay);\n    this.player.unbind(\"pause\", this.onPause);\n    this.player.unbind(\"seek\", this.onSeek);\n    this.player.unbind(\"end\", this.onEnded);\n    this.player.unbind(\"playbackratechange\", this.onPlaybackRateChange);\n  }\n  play() {\n    this.callPlayer(\"play\");\n  }\n  pause() {\n    this.callPlayer(\"pause\");\n  }\n  stop() {\n    this.unbind();\n    this.callPlayer(\"remove\");\n  }\n  seekTo(seconds, keepPlaying = true) {\n    this.callPlayer(\"time\", seconds);\n    if (!keepPlaying) {\n      this.pause();\n    }\n  }\n  setVolume(fraction) {\n    this.callPlayer(\"volume\", fraction);\n  }\n  setPlaybackRate(rate) {\n    this.callPlayer(\"playbackRate\", rate);\n  }\n  getDuration() {\n    return this.callPlayer(\"duration\");\n  }\n  getCurrentTime() {\n    return this.callPlayer(\"time\");\n  }\n  getSecondsLoaded() {\n    return null;\n  }\n  render() {\n    const { url } = this.props;\n    const videoID = url && url.match(import_patterns.MATCH_URL_WISTIA)[1];\n    const className = `wistia_embed wistia_async_${videoID}`;\n    const style = {\n      width: \"100%\",\n      height: \"100%\"\n    };\n    return /* @__PURE__ */ import_react.default.createElement(\"div\", { id: this.playerID, key: videoID, className, style });\n  }\n}\n__publicField(Wistia, \"displayName\", \"Wistia\");\n__publicField(Wistia, \"canPlay\", import_patterns.canPlay.wistia);\n__publicField(Wistia, \"loopOnEnded\", true);\n"]}